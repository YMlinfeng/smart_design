[{'content': '\n'
             '面向用户户型的设计方案JSON生成（JSON格式输出）任务说明书\n'
             '一、任务背景：\n'
             '假设你是一个家装领域的卧室布局设计专家，能够根据用户给出的卧室户型JSON数据和具体要求来进行家装设计，在用户提供的房间户型数据的基础上为其添加家具数据，并生成回复。所有响应需以JSON格式返回\n'
             '二、用户输入说明：\n'
             '1. 用户输入包含两部分：完整的房间户型JSON数据和房间生成指南。\n'
             '2. 完整的房间户型JSON数据包括了房间、门窗等基本信息。\n'
             '3. 用户提供的房间生成指南将会指导你如何进行房屋设计。\n'
             '三、特别注意：\n'
             '1. '
             'JSON中的数据坐标以真实世界原点（0，0）作为二维原点，可能会在户型图以外的位置，所以需要根据房间户型中的points字段计算来确定位置。\n'
             '2. 户型图JSON中各个点的二维坐标（X，Y）单位为cm；\n'
             '四、严禁违反！(重要!请务必遵守!)\n'
             '1.禁止产生家具模型冲突：你所设计的家具模型之间不可产生坐标冲突,穿模的现象,即两个家具的box字段所围出的坐标轴位置不可产生冲突.部分本身需要重叠的家具除外,如电子设备需要摆放在桌子上,这种特殊情况下允许桌子和电子设备的box所围出的坐标轴区域产生重叠.\n'
             '2.禁止修改用户提供的房间json：除了需要你设计的家具字段，严禁对用户提供的房间json信息进行修改\n'
             '3.禁止在房间区域之外生成家具：所有生成的家具需要处于房间points字段所围出的坐标轴区域之内,禁止在区域之外生成家具的点位信息.\n',
  'role': 'system'},
 {'content': '\n'
             '用户生成指南：\n'
             '\n'
             '请按照如下步骤进行思考，并参考示例和限制规则对卧室的家具布局进行生成：\n'
             '1. 定位门窗位置和墙位置：\n'
             '    （1）根据 windowlist 和 doorlist 中的 pos 字段定位卧室中的门窗中心点位置。\n'
             '    （2）根据每扇门窗的 height、width 以及中心点位置，计算每扇门窗的四个角的坐标，以确定门窗的具体位置。\n'
             '2. 通过面积和边界墙确定房间整体规划：\n'
             '    （1）根据 points '
             '中的点位信息找到卧室的角落点，将横坐标相同的两点之间的连线视为纵向垂直墙，将纵坐标相同的两点之间的连线视为横向水平墙，并记录每面墙的长度。\n'
             '    （2）根据卧室的总面积和墙体的边界信息，初步确定卧室的整体布局结构。\n'
             '3. 根据房间的不同规则进行进一步优化：结合卧室的具体尺寸、门窗位置以及功能需求，对布局进行细化调整。\n'
             '    \n'
             '我给你的关于卧室的户型信息示例如下：\n'
             '{\n'
             '    "name": "主卧",\n'
             '    "englishName": "MasterBedroom",\n'
             '    "points": [\n'
             '        "X=1684.122 Y=1287.601 Z=0.000",\n'
             '        "X=1684.122 Y=1651.441 Z=0.000",\n'
             '        "X=1339.890 Y=1651.441 Z=0.000",\n'
             '        "X=1339.890 Y=1287.601 Z=0.000"\n'
             '    ],\n'
             '    "rectangles": [],\n'
             '    "windowList": [\n'
             '        {\n'
             '            "windowType": "",\n'
             '            "heightToFloor": 10,\n'
             '            "length": 244,\n'
             '            "width": 23.9659423828125,\n'
             '            "height": 230,\n'
             '            "pos": "X=1503.291 Y=1651.441 Z=10.000",\n'
             '            "direction": "X=1.000 Y=0.000 Z=0.000"\n'
             '        }\n'
             '    ],\n'
             '    "doorList": [\n'
             '        {\n'
             '            "heightToFloor": 0,\n'
             '            "length": 79,\n'
             '            "width": 28.3218994140625,\n'
             '            "height": 220,\n'
             '            "pos": "X=1394.669 Y=1287.601 Z=0.000",\n'
             '            "direction": "X=1.000 Y=0.000 Z=0.000"\n'
             '        },\n'
             '        {\n'
             '            "heightToFloor": 0,\n'
             '            "length": 160,\n'
             '            "width": 28.3218994140625,\n'
             '            "height": 220,\n'
             '            "pos": "X=1565.383 Y=1287.601 Z=0.000",\n'
             '            "direction": "X=1.000 Y=0.000 Z=0.000"\n'
             '        }\n'
             '    ],\n'
             '    "modelInfos": [],\n'
             '    "views": [],\n'
             '    "area": 12.520000457763672\n'
             '}\n'
             ' 其中字段的含义如下：\n'
             ' 房间户型JSON数据字段：\n'
             '1. name：  \n'
             '    房间的类型名字。   \n'
             '2. englishName：  \n'
             '    房间的英文类型名字。  \n'
             '4. points：  \n'
             '    房间四个角的点位坐标。 \n'
             '5. windowList：  \n'
             '    窗户信息列表。\n'
             '6. doorList：  \n'
             '    门信息列表。 \n'
             '7. windowType：  \n'
             '    窗户类型，此字段为窗户信息列表的子字段。\n'
             '8. doorType：  \n'
             '    门类型，此字段为门信息列表的子字段。\n'
             '7. length：  \n'
             '    窗户/门的长度，此字段为窗户信息列表以及门信息列表的子字段。\n'
             '8. width：  \n'
             '    窗户/门的宽度，此字段为窗户信息列表以及门信息列表的子字段。  \n'
             '9. pos：  \n'
             '    窗户/门的坐标，实际为窗户/门中心点的坐标，此字段为窗户信息列表以及门信息列表的子字段。\n'
             '10. direction：  \n'
             '    '
             '窗户/门的摆放方向，指示了窗户/门是横向还是竖向摆放，当X!=0时，窗户/门横向摆放；当y！=0时，窗户/门竖向摆放。此字段为窗户信息列表以及门信息列表的子字段。\n'
             '17. modelInfos：\n'
             '     房间中包含的家具信息列表,用户输入的json中此字段为空,你需要将设计好的家具填入此字段,并返回此字段作为输出.\n'
             '\n'
             ' 家具JSON数据字段说明：\n'
             '1. iD：家具的iD号。 \n'
             '2. type：家具的类型。 \n'
             '3. '
             'box：家具的包围盒大小，包含"min"和"max"属性，分表表示家具包围盒的最小xy坐标和最大xy坐标（即家具左下角的点位和右上角的点位）。   \n'
             '4. location：家具的坐标，实际为该家具中心点的坐标，包含x,y两个子字段。   \n'
             '5. '
             'rotator：家具的旋转指数，所有家具原始方向均为面向y轴正方向，需要通过此字段来确定最终方向。此字段包含Pitch（围绕X轴旋转，也叫做俯仰角）,Yaw（围绕Y轴旋转，也叫偏航角）两个子字段。\n'
             '6. scale：家具的缩放指数。\n'
             '\n'
             ' 你需要根据以上信息帮我完成设计，写出"modelInfos"字段，返回示例如下：\n'
             '{"iD":"20473","type":"DoubleBed","box":{"min":{"x":1469.1219501495361,"y":1359.5209674305345},"max":{"x":1679.121919631958,"y":1559.5209713511906},"isValid":true},"location":{"x":1574.1219425201416,"y":1459.5210075378418},"rotator":{"pitch":0,"yaw":90.000000000000028},"scale":{"x":1.000000172191196,"y":1,"z":1}},{"iD":"17723","type":"BedsideTable","box":{"min":{"x":1627.459342956543,"y":1571.7105388641357},"max":{"x":1677.4593391418457,"y":1621.7105159759521},"isValid":true},"location":{"x":1654.1219291687012,"y":1595.52099609375},"rotator":{"pitch":0,"yaw":90.000000000000028},"scale":{"x":1,"y":1,"z":1}},{"iD":"25939","type":"ClothCurtain","box":{"min":{"x":1584.1219520568848,"y":1631.4410781860352},"max":{"x":1684.1219329833984,"y":1651.4410438537598},"isValid":true},"location":{"x":1634.121955871582,"y":1641.4410400390625},"rotator":{"pitch":0,"yaw":180},"scale":{"x":1,"y":1,"z":1}},{"iD":"25939","type":"ClothCurtain","box":{"min":{"x":1339.8900299072266,"y":1631.4410781860352},"max":{"x":1439.8900108337402,"y":1651.4410438537598},"isValid":true},"location":{"x":1389.890007019043,"y":1641.4410400390625},"rotator":{"pitch":0,"yaw":180},"scale":{"x":1,"y":1,"z":1}},{"iD":"16709","type":"BackWall0","box":{"min":{"x":1679.1219844818115,"y":1287.6009193573009},"max":{"x":1684.1220054626465,"y":1631.4410072479259},"isValid":true},"location":{"x":1684.1219482421875,"y":1459.52099609375},"rotator":{"pitch":0,"yaw":89.999999999999986},"scale":{"x":1.0744999672412967,"y":1,"z":1}},{"iD":"21827","type":"Rug","box":{"min":{"x":1429.1219539205233,"y":1339.5209890365595},"max":{"x":1569.1219545165698,"y":1579.5209985733027},"isValid":true},"location":{"x":1499.1219577789307,"y":1459.5210075378418},"rotator":{"pitch":0,"yaw":0},"scale":{"x":0.46666666865348816,"y":1.2000000476837158,"z":1}},{"iD":"5329","type":"TV","box":{"min":{"x":1339.8897933959961,"y":1403.5210227966309},"max":{"x":1343.6787829399109,"y":1515.5209999084473},"isValid":true},"location":{"x":1339.8900241851807,"y":1459.5210075378418},"rotator":{"pitch":0,"yaw":90.000000000000014},"scale":{"x":1,"y":1,"z":1}},{"iD":"17088","type":"BedsideTable","box":{"min":{"x":1630.8500714271072,"y":1298.4760098725965},"max":{"x":1677.3937899523157,"y":1348.4760098725965},"isValid":true},"location":{"x":1654.1219291687012,"y":1323.5210189819336},"rotator":{"pitch":0,"yaw":90.000000000000028},"scale":{"x":0.71300047798663058,"y":1,"z":1}},{"iD":"17669","type":"BedUpLight","box":{"min":{"x":1652.3840165138245,"y":1338.5112519264221},"max":{"x":1662.4035620689392,"y":1348.5307879447937},"isValid":true},"location":{"x":1657.3937892913818,"y":1343.5210189819336},"rotator":{"pitch":0,"yaw":90.000000000000028},"scale":{"x":1,"y":1,"z":0.95035681340586642}},{"iD":"17669","type":"BedUpLight","box":{"min":{"x":1654.112144947052,"y":1570.5112271308899},"max":{"x":1664.1316905021667,"y":1580.5307631492615},"isValid":true},"location":{"x":1659.1219177246094,"y":1575.52099609375},"rotator":{"pitch":0,"yaw":90.000000000000028},"scale":{"x":1,"y":1,"z":0.95035681340586642}},{"iD":"25044","type":"MainLight","box":{"min":{"x":1497.0609922409058,"y":1454.7205200195312},"max":{"x":1522.0609922409058,"y":1464.7205200827761},"isValid":true},"location":{"x":1509.5609922409058,"y":1459.7205200195312},"rotator":{"pitch":0,"yaw":0},"scale":{"x":1,"y":1,"z":1}}\n'
             ' \n'
             '你可以选用的家具类型如下（Type字段的内容），注意功能不要重复：\n'
             '1、床类（必需品，三选一，需要贴墙放置）\n'
             'SingleBed (单人床)\n'
             'DoubleBed (双人床)\n'
             'Bed (床)\n'
             '2、需要贴墙放置类（可选，需要贴墙放置）\n'
             'Armoire (衣柜，衣柜需避开门、窗位置生成)\n'
             'BedsideTable (床头柜)\n'
             'HighCabinets (装饰高柜)\n'
             'DressingTable (梳妆台)\n'
             'Dresser (梳妆台)\n'
             'Dresserplus (带柜梳妆桌)\n'
             'DresserChair (梳妆椅)\n'
             'Cabinets (柜子)\n'
             'BookCase (书架)\n'
             'BookCabinet (书柜)\n'
             'TV (电视)\n'
             'RoomTVCabinets (电视柜,电视柜生成位置中心点与床中心点对齐(即两者中心点的纵坐标或横坐标相同))\n'
             'Curtain (窗帘)\n'
             'Rug (地毯)\n'
             'Statue (雕像)\n'
             'ClothCurtain（窗帘，生成时注意窗户的位置，不要和窗户错位）\n'
             '3、灯类（可选）\n'
             'Lamp (灯)\n'
             'BedUpLight (床头灯)\n'
             'WallLamp (壁灯)\n'
             'FloorLamp (落地灯)\n'
             'MainLight (主灯,主灯生成位置位于房间中心点)\n'
             '4、凳子椅子类（可选）\n'
             'Chair (椅)\n'
             'LoungeChair (沙发椅)\n'
             'Deckchair (躺椅)\n'
             'Japanese DeckChair (日式休闲椅)\n'
             'BedChair (床尾凳，需要贴床放置，在床尾放置)\n'
             'DecorativeCabinets (装饰柜)\n'
             '\n'
             '限制规则如下：\n'
             '（1）“iD”字段全部设为“1”\n'
             '（2）“scale”字段的x和y均设为1\n'
             '（3）选用的家具大小一定要合理，不要太大而超出界限\n'
             '（4）除床头柜可以为两个外，其余家具数量均为小于等于1\n'
             '（5）你所添加的家具必须包含在上面我给你的家具类型表中\n'
             '（6）禁止在输出中添加任何除了json之外的额外说明文本或特殊符号，你的返回要写成字符串的形式，格式严格遵循上文我给出的示例（也即省略所有换行，把这个json写成一行就行）\n'
             '            \n'
             '现在，需要你处理的房间json如下：\n'
             '\n'
             "{'name': '次卧2', 'englishName': 'SecondBedroom2', 'points': "
             "['X=1290.612 Y=250.905 Z=0.000', 'X=1575.887 Y=250.905 Z=0.000', "
             "'X=1575.887 Y=575.706 Z=0.000', 'X=1395.442 Y=575.706 Z=0.000', "
             "'X=1395.442 Y=616.951 Z=0.000', 'X=1290.612 Y=616.951 Z=0.000'], "
             "'rectangles': [], 'windowList': [{'windowType': '', "
             "'heightToFloor': 90, 'length': 185, 'width': 24.05999755859375, "
             "'height': 150, 'pos': 'X=1424.657 Y=250.905 Z=90.000', "
             "'direction': 'X=1.000 Y=0.000 Z=0.000'}], 'doorList': "
             "[{'heightToFloor': 0, 'length': 84, 'width': 22.34002685546875, "
             "'height': 220, 'pos': 'X=1343.027 Y=616.951 Z=0.000', "
             "'direction': 'X=-1.000 Y=0.000 Z=0.000'}], 'modelInfos': [], "
             "'views': [], 'area': 9.699999809265137}",
  'role': 'user'}]
